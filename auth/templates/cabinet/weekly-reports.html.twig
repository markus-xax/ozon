{% extends 'index/index.html.twig' %}
{% block linkStyles %}
    <link href="../styles/index/styles.css" rel="stylesheet">
    <link href="../styles/index/vendor.css" rel="stylesheet">
    <link href="../styles/summary/summary.css" rel="stylesheet">
    <link href="../styles/summary/table.css" rel="stylesheet">
    <link href="../styles/summary/table2.css" rel="stylesheet">

{% endblock %}
{% block body %}
    {% if tokens %}
        {% if processing is defined %}
            <div class="be-content">
                <div id="mp-stats-app" class="main-content container-fluid">
                    <div id="global-loader-block" aria-hidden="true" class="mp-loader-overlay ag-overlay hidden">
                        <div class="ag-overlay-panel">
                            <div class="ag-overlay-wrapper ag-layout-normal ag-overlay-loading-wrapper">
                                <div class="mp-loader-static"></div>
                            </div>
                        </div>
                    </div> <!---->
                    <div>
                        <div class="card">
                            <div class="card-header d-md-flex justify-content-between align-items-start pb-3 pt-3">
                                <div class="d-flex flex-column flex-lg-row justify-content-between justify-content-lg-start align-items-lg-center">
                                    <div class="d-flex flex-column flex-lg-block flex-lg-row">
                                        <div class="d-block-inline dropdown-period mr-3">
                                            <div class="btn-group d-flex flex-column flex-lg-block flex-lg-row">
                                                Происходит обработка, пожалуйста повторите позже
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {% else %}
            {% include 'cabinet/HTML/weekly-reports.html.twig' %}
        {% endif %}
    {% else %}
        <div id="mp-stats-app" class="main-content container-fluid">
            <div id="global-loader-block" aria-hidden="true" class="mp-loader-overlay ag-overlay hidden">
                <div class="ag-overlay-panel">
                    <div class="ag-overlay-wrapper ag-layout-normal ag-overlay-loading-wrapper">
                        <div class="mp-loader-static"></div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="card card-border-color card-border-color-warning col-12 py-5">
                    <div class="card-body py-4"><p class="lead text-center">Для работы с разделами личного кабинета
                            необходимо добавить ключи API</p>
                        <div class="d-flex justify-content-center"><a href="/cabinet/connect" class="btn btn-success">Добавить</a>
                        </div>
                    </div>
                </div>
            </div> <!---->
            <div><!---->
                <div class="snotify snotify-left_top"></div>
                <div class="snotify snotify-left_center"></div>
                <div class="snotify snotify-left_bottom"></div>
                <div class="snotify snotify-right_top"></div>
                <div class="snotify snotify-right_center"></div>
                <div class="snotify snotify-right_bottom"></div>
                <div class="snotify snotify-center_top"></div>
                <div class="snotify snotify-center_center"></div>
                <div class="snotify snotify-center_bottom"></div>
            </div>
        </div>
    {% endif %}
    <script>
        let option = {}
        document.addEventListener("DOMContentLoaded", () => {
            option = {...getOptions()}
            let buttonAllkey = document.getElementById("__BVID__11");
            let select = buttonAllkey.children[buttonAllkey.children.length - 1]
            select = select.children[select.children.length - 2]
            let tokens = [{% for token in tokens ?? [] %} {{ token.id }}, {% endfor %}]
            for (let i = 0; i < select.children.length; i++) {
                for (let j = 0; j < tokens.length; j++) {
                    if (tokens[j] === tryParseInt(select.children[i].value)) {
                        select.children[i].selected = true
                    }
                }
            }
            option['columnDefs'] = [
                {
                    headerName: 'ID отчета',
                    field: 'realizationreport_id'
                },
                {
                    headerName: 'Период',
                    children: [
                        {
                            headerName: 'Дата начала',
                            field: 'dateStart'
                        },
                        {
                            headerName: 'Дата конца',
                            field: 'dateEnd'
                        }
                    ]
                },
                {
                    headerName: 'Суммы',
                    children: [
                        {
                            headerName: 'Продажи',
                            field: 'retail',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                        {
                            headerName: 'Себестоимость продаж',
                            field: 'sales',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                        {
                            headerName: 'Возвраты',
                            field: 'returned',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                        {
                            headerName: 'Себестоимость возвратов',
                            field: 'returneds',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                        {
                            headerName: 'Общее',
                            field: 'retail2',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                        {
                            headerName: 'По заказам',
                            field: 'retail_price',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                    ]
                },
                {
                    headerName: 'Стоимость логистики',
                    children: [
                        {
                            headerName: 'К клиенту',
                            field: 'toClient'
                        },
                        {
                            headerName: 'От клиента',
                            field: 'fromClient'
                        },
                        {
                            headerName: 'Общая',
                            field: 'allClient'
                        },
                    ]
                },
                {
                    headerName: 'Комиссия',
                    children: [
                        {
                            headerName: 'От продажи',
                            field: 'commission',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                        {
                            headerName: 'За возврат',
                            field: 'com_return',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                        {
                            headerName: 'Общая',
                            field: 'commisson_return',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        },
                        {
                            headerName: 'Чистая прибыль',
                            field: 'all_retail',
                            cellRenderer: params => `<p class="number">${params.value} </p>`
                        }
                    ]
                },
            ]
            option['rowData'] = [
                {% for report in reports %}
                {
                    realizationreport_id: '{{ report.realizationreport_id }}',
                    dateStart: '{{ report.dateStart }}',
                    dateEnd: '{{ report.dateEnd }}',
                    retail: '{{ report.retail }}',
                    sales: '0, 00 ₽',
                    returned: '{{ report.returned }}',
                    returneds: '0, 00 ₽',
                    retail2: '{{ report.retail }}',
                    retail_price : '{{ report.retail_price }}',
                    toClient: '1875, 00 ₽',
                    fromClient: '33, 00₽,',
                    allClient: '1908, 00 ₽',
                    commission: '{{ report.commission }}',
                    com_return: '{{ report.com_return }}',
                    commisson_return: '{{ report.commission+report.com_return }}',
                    all_retail:'{{ report.retail-(report.commission+report.com_return) }}'
                },
                {% endfor %}
            ]
            new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[0], option)
        })
    </script>
{%endblock%}