{% extends 'index/index.html.twig' %}
{% block linkStyles %}
    <link href="../../styles/index/styles.css" rel="stylesheet">
    <link href="../../styles/index/vendor.css" rel="stylesheet">
    <link href="../../styles/summary/summary.css" rel="stylesheet">
    <link href="../../styles/summary/table.css" rel="stylesheet">
    <link href="../../styles/summary/table2.css" rel="stylesheet">
    <link href="../../styles/seo/selection.css" rel="stylesheet">
    <link href="../../styles/seo/slider.css" rel="stylesheet">
    <link href="../../styles/seo/table.css" rel="stylesheet">
    <link href="../../styles/jquery-spinner.min.css" rel="stylesheet">
    <script src="../../script/jquery-spinner.min.js"/>
    <script>
        function collapse(element) {
            let display = element.parentNode.parentNode.children[1].style.display
            element.parentNode.parentNode.children[1].style.display = display === "block" ? "none" : "block"
        }
    </script>
{% endblock %}
{% block body %}
    {% include 'wb/HTML/categorySale.html.twig' %}
    <script>
        let fbs = {{ fbs??'-' }}, date = "{{ d1??'-' }} to {{ d2??'-' }}"
        let option = {}, option2 = {}, option3 = {}, option4 = {}, option5 = {}, option6 = {}, option7 = {},
            option8 = {}, option9 = {}
        document.addEventListener("DOMContentLoaded", () => {
            option = {...getOptions()}
            let col = [
                {
                    headerName: 'Фото',
                    field: 'photo',
                    maxWidth: 80,
                    sortable: false,
                    filter: false,
                    cellRenderer: params => `<img style="height: 32px; width: 32px" src="${params.value}" />`
                },
                {headerName: 'SKU', field: 'sku'},
                {headerName: 'Название', field: 'name'},
                {headerName: 'Цвет', field: 'color'},
                {headerName: 'Категория', field: 'category'},
                {headerName: 'Позиция', field: 'position'},
                {headerName: 'Бренд', field: 'brand'},
                {headerName: 'Продавец', field: 'seller'},
                {headerName: 'Наличие', field: 'balance'},
                {headerName: 'Комментарии', field: 'comments'},
                {headerName: 'Рейтинг', field: 'rating'},
                {headerName: 'Цена', field: 'finalPrice'},
                {headerName: 'Цена СПП', field: 'clientPrice'},
                {headerName: 'Дней в наличии', field: 'dayStock'},
                {headerName: 'Продаж', field: 'sales'},
                {headerName: 'Выручка', field: 'revenue'},
            ]
            let value = [
                {% for sale in sales??[] %}
                {
                    photo: '{{ sale.thumb }}',
                    sku: {{ sale.nmId }} ,
                    name: '{{ sale.name }}',
                    color: '{{ sale.color }}',
                    category: '{{ sale.category }} ',
                    position: '{{ sale.position }}',
                    brand: '{{ sale.brand }}',
                    seller: '{{ sale.seller }}',
                    balance: '{{ sale.balance }} ',
                    comments: '{{ sale.comments }}',
                    rating: '{{ sale.rating }}',
                    finalPrice: '{{ sale.finalPrice }}',
                    clientPrice: '{{ sale.clientPrice }}',
                    dayStock: '{{ sale.dayStock }} ',
                    sales: '{{ sale.sales }}',
                    revenue: '{{ sale.revenue }}'
                },
                {% endfor %}
            ]

            option['columnDefs'] = col
            option['rowData'] = value
            option['onRowClicked'] = event => {
                window.location.href = 'item/' + event.data.sku
            }
            new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[0], option)

            newDatePicker('datePicker', function (date) {
                window.location.href = "{{ path("wb_category") }}?url={{ path??'-' }}&date=" + date + "&fbs=" + fbs
            })
            document.getElementById('switcher-element-72191').checked = fbs === 0 ? false : true
            document.getElementById('switcher-element-72191').addEventListener("input",
                function () {
                    fbs = fbs === 0 ? 1 : 0
                    window.location.href = "{{ path("wb_category") }}?url={{ path??'-' }}&date=" + date + "&fbs=" + fbs
                }
            )
        })

        function redirect(element) {
            window.location.href = "/wb/item/" + element.id + "?name=" + "{{ path??'-' }}"
        }

        function select(el) {
            let id = el.id.substring(0, 10)
            let befPrefix = "__BVID__"
            let list = ["69", "75", "77", "79", "82", "84", "86", "88", "90"]
            let afPrefix = "___BV_tab_button__"
            for (let i = 0; i < list.length; i++) {
                document.getElementById(befPrefix + list[i] + afPrefix).classList.remove("active")
                document.getElementById(befPrefix + list[i]).style.display = "none"
            }
            document.getElementById(id).style.display = "block"
            document.getElementById(id + afPrefix).classList.add("active")
            switch (id) {
                case befPrefix + "75":
                    if (!option2['load']) {
                        subCategory(id)
                    }
                    break;
                case befPrefix + "77":
                    if (!option3['load']) {
                        brands(id)
                    }
                    break;
                case befPrefix + "79":
                    if (!option4['load']) {
                        sellers(id)
                    }
                    break;
                case befPrefix + "82":
                    if (!option5['load']) {
                        trends(id)
                    }
                    break;
                case befPrefix + "84":
                    if (!option6['load']) {
                        onDay(id)
                    }
                    break;
                case befPrefix + "86":
                    if (!option7['load']) {
                        priceSegment(id)
                    }
                    break;
                case befPrefix + "88":
                    if (!option8['load']) {
                        compare(id)
                    }
                    break;
                case befPrefix + "90":
                    if (!option9['load']) {
                        items(id)
                    }
                    break;
            }
        }

        function compare(id) {
            option8 = {...getOptions()}
            fetch(`{{ path('api_compare') }}?url={{ path??'-' }}`, {method: "GET"})
                .then(data => data.json())
                .then(data => {
                    let value = []
                    let date = data['date']
                    document.getElementById('d1').innerText = `${date['d11']} - ${date['d12']}`
                    document.getElementById('d2').innerText = `${date['d21']} - ${date['d22']}`
                    data = data['data']
                    for (let i = 0; i < data.length; i++) {
                        value[i] = {
                            sku: data[i]['sku'],
                            brand: data[i]['brand'],
                            seller: data[i]['seller'],
                            img: data[i]['img'],
                            name: data[i]['name'],
                            sales_count_1: data[i]['sales_count_1'],
                            revenue_1: data[i]['revenue_1'],
                            pricefinal_1: data[i]['pricefinal_1'],
                            pricefinal_2: data[i]['pricefinal_2'],
                            revenue_2: data[i]['revenue_2'],
                            sales_count_2: data[i]['sales_count_2'],
                            sales_count_diff: data[i]['sales_count_diff'],
                            revenue_diff: data[i]['revenue_diff'],
                            pricefinal_diff: data[i]['pricefinal_diff']
                        }
                    }
                    option8['columnDefs'] = [
                        {
                            headerName: 'Товар',
                            marryChildren: true,
                            children: [
                                {
                                    field: 'img',
                                    headerName: 'Фото',
                                    maxWidth: 80,
                                    sortable: false,
                                    filter: false,
                                    cellRenderer: params => `<img style="height: 32px; width: 32px" src="${params.value}" />`
                                },
                                {
                                    field: 'name',
                                    headerName: 'Название',
                                    cellRenderer: params => `<a style="height: 32px; width: 32px" href="item/${params.data.sku}">${params.value}</a>`
                                },
                                {
                                    field: 'sku',
                                    headerName: 'SKU',
                                    cellRenderer: params => `<a style="height: 32px; width: 32px" href="item/${params.value}">${params.value}</a>`
                                },
                                {
                                    field: 'brand',
                                    headerName: 'Бренд',
                                },
                                {
                                    field: 'seller',
                                    headerName: 'Продавец',
                                },
                            ],
                        },
                        {
                            headerName: `${date['d11']} - ${date['d12']}`,
                            marryChildren: true,
                            children: [
                                {
                                    field: 'sales_count_1',
                                    headerName: 'Продаж (шт)',
                                    cellRenderer: params => `<p class="number">${params.value} шт</p>`
                                },
                                {
                                    field: 'revenue_1',
                                    headerName: 'Выручка',
                                    cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                                },
                                {
                                    field: 'pricefinal_1',
                                    headerName: 'Цена',
                                    cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                                },
                            ]
                        },
                        {
                            headerName: `${date['d21']} - ${date['d22']}`,
                            marryChildren: true,
                            children: [
                                {
                                    field: 'sales_count_2',
                                    headerName: 'Продаж (шт)',
                                    cellRenderer: params => `<p class="number">${params.value} шт</p>`
                                },
                                {
                                    field: 'revenue_2',
                                    headerName: 'Выручка',
                                    cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                                },
                                {
                                    field: 'pricefinal_2',
                                    headerName: 'Цена',
                                    cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                                },
                            ]
                        },
                        {
                            headerName: `Разница`,
                            marryChildren: true,
                            children: [
                                {
                                    field: 'sales_count_diff',
                                    headerName: 'Продаж (шт)',
                                    cellRenderer: params => `<p class="number">${params.value} шт</p>`
                                },
                                {
                                    field: 'revenue_diff',
                                    headerName: 'Выручка',
                                    cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                                },
                                {
                                    field: 'pricefinal_diff',
                                    headerName: 'Цена',
                                    cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                                },
                            ]
                        }
                    ]
                    option8['rowData'] = value

                    let grid = new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[7], option8)
                })
        }

        function items(id) {
            option9 = {...getOptions()}
            fetch(`/api/items?url={{ path??'-' }}`, {method: "GET"})
                .then(data => data.json())
                .then(data => {
                    let str = ``, value = []
                    for (let i = 0; i < data.length; i++) {
                        value[i] = {
                            name: data[i]['name'],
                            commision_fbo: data[i]['commision_fbo'],
                            commision_fbs: data[i]['commision_fbs'],
                            basic_logistics: data[i]['basic_logistics'],
                            storage_price: data[i]['storage_price'],
                            acceptance_price: data[i]['acceptance_price'],
                            rating: data[i]['rating'],
                            comments: data[i]['comments'],
                            sales: data[i]['sales'],
                            revenue: data[i]['revenue'],
                            avg_price: data[i]['avg_price'],
                            items: data[i]['items'],
                            items_with_sells: data[i]['items_with_sells'],
                            items_with_sells_percent: data[i]['items_with_sells_percent'],
                            sales_per_items_average: data[i]['sales_per_items_average'],
                            sales_per_items_with_sells_average: data[i]['sales_per_items_with_sells_average'],
                            sellers: data[i]['sellers'],
                            sellers_with_sells: data[i]['sellers_with_sells'],
                            sellers_with_sells_percent: data[i]['sellers_with_sells_percent'],
                            brands: data[i]['brands'],
                            brands_with_sells: data[i]['brands_with_sells'],
                            revenue_per_items_average: data[i]['revenue_per_items_average'],
                            revenue_per_items_with_sells_average: data[i]['revenue_per_items_with_sells_average'],
                            purchase: data[i]['purchase'],
                            purchase_after_return: data[i]['purchase_after_return'],
                        }
                    }
                    option9['columnDefs'] = [
                        {
                            headerName: 'Название',
                            field: 'name',
                        },
                        {
                            headerName: 'Коммисия',
                            field: 'commision_fbo',
                            cellRenderer: params => `<p class="number">${params.value} %</p>`
                        },
                        {
                            headerName: 'Коммисия FBS',
                            field: 'commision_fbs',
                            cellRenderer: params => `<p class="number">${params.value} %</p>`
                        },
                        {
                            headerName: 'Базовая логистика',
                            field: 'basic_logistics',
                            cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                        },
                        {
                            headerName: 'Цена хранения',
                            field: 'storage_price',
                            cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                        },
                        {
                            headerName: 'Цена приемки',
                            field: 'acceptance_price',
                            cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                        },
                        {
                            headerName: 'Рейтинг',
                            field: 'rating',
                        },
                        {
                            headerName: 'Комментарии',
                            field: 'comments',
                        },
                        {
                            headerName: 'Продажи',
                            field: 'sales',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Выручка',
                            field: 'revenue',
                            cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                        },
                        {
                            headerName: 'Средняя цена',
                            field: 'avg_price',
                            cellRenderer: params => `<p class="number">${params.value} ₽</p>`
                        },
                        {
                            headerName: 'Товаров',
                            field: 'items',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Товаров с продажами',
                            field: 'items_with_sells',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Процент товаров с продажами',
                            field: 'items_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value} %</p>`
                        },
                        {
                            headerName: 'Среднее число продаж на 1 товар',
                            field: 'sales_per_items_average',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Среднее число продаж на 1 товар с продажами',
                            field: 'sales_per_items_with_sells_average',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Число продавцов',
                            field: 'sellers',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Продавцов с продажами',
                            field: 'sellers_with_sells',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Процент продавцов с продажами',
                            field: 'sellers_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value} %</p>`
                        },
                        {
                            headerName: 'Брендов',
                            field: 'brands',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Брендов с продажами',
                            field: 'brands_with_sells',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Средняя выручка на 1 товар',
                            field: 'revenue_per_items_average',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Средняя выручка на 1 товар с продажами',
                            field: 'revenue_per_items_with_sells_average',
                            cellRenderer: params => `<p class="number">${params.value} шт</p>`
                        },
                        {
                            headerName: 'Средний процент выкупа',
                            field: 'purchase',
                            cellRenderer: params => `<p class="number">${params.value} %</p>`
                        },
                        {
                            headerName: 'Средний процент выкупа с учетом возвратов',
                            field: 'purchase_after_return',
                            cellRenderer: params => `<p class="number">${params.value} %</p>`
                        },
                    ]
                    option9['rowData'] = value
                    option9['headerHeight'] = 70
                    let grid = new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[8], option9)
                })
        }

        function priceSegment(id) {
            option7 = {...getOptions()}
            fetch(`/api/priceSegment?url={{ path??'-' }}`, {method: "GET"})
                .then(data => data.json())
                .then(data => {
                    let value = []
                    for (let i = 0; i < data.length; i++) {
                        value[i] = {
                            min_range_price: data[i]['min_range_price'],
                            max_range_price: data[i]['max_range_price'],
                            sales: data[i]['sales'],
                            revenue: data[i]['revenue'],
                            lost_profit: data[i]['lost_profit'],
                            lost_profit_percent: data[i]['lost_profit_percent'],
                            items: data[i]['items'],
                            items_with_sells: data[i]['items_with_sells'],
                            brands: data[i]['brands'],
                            brands_with_sells: data[i]['brands_with_sells'],
                            sellers: data[i]['sellers'],
                            sellers_with_sells: data[i]['sellers_with_sells'],
                            product_revenue: data[i]['product_revenue'],
                        }
                    }
                    option7['columnDefs'] = [
                        {
                            headerName: 'Диапазон цен',
                            marryChildren: true,
                            children: [
                                {field: 'min_range_price', headerName: 'От'},
                                {field: 'max_range_price', headerName: 'До'},
                                {
                                    field: 'sales',
                                    headerName: 'Продаж',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} шт</p>`
                                },
                                {
                                    headerName: 'Выручка',
                                    field: 'revenue',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} ₽</p>`
                                },
                                {
                                    headerName: 'Упущенная выручка',
                                    field: 'lost_profit',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} ₽</p>`
                                },
                                {
                                    headerName: 'Упущенная выручка (%)',
                                    field: 'lost_profit_percent',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} %</p>`
                                },
                                {
                                    headerName: 'Товаров',
                                    field: 'items',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} шт</p>`
                                },
                                {
                                    headerName: 'Товаров с продажами',
                                    field: 'items_with_sells',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} шт</p>`
                                },
                                {
                                    headerName: 'Брендов',
                                    field: 'brands',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)}</p>`
                                },
                                {
                                    headerName: 'Брендов с продажами',
                                    field: 'brands_with_sells',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)}</p>`
                                },
                                {
                                    headerName: 'Продавцов',
                                    field: 'sellers',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} ₽</p>`
                                },
                                {
                                    headerName: 'Продавцов с продажами',
                                    field: 'sellers_with_sells',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} ₽</p>`
                                },
                                {
                                    headerName: 'Выручка на товар',
                                    field: 'product_revenue',
                                    cellRenderer: params => `<p class="number">${(params.value ?? 0)} ₽/шт</p>`
                                },
                            ],
                        }
                    ]
                    option7['rowData'] = value

                    let grid = new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[6], option7)
                })
        }

        function onDay(id) {
            option6 = {...getOptions()}
            fetch(`/api/onDay?url={{ path??'-' }}`, {method: "GET"})
                .then(data => data.json())
                .then(data => {
                    let value = []
                    for (let i = 0; i < data.length; i++) {
                        value[i] = {
                            period: data[i]['period'],
                            items: data[i]['items'],
                            items_with_sells: data[i]['items_with_sells'],
                            sales: data[i]['sales'],
                            brands: data[i]['brands'],
                            brands_with_sells: data[i]['brands_with_sells'],
                            sellers: data[i]['sellers'],
                            sellers_with_sells: data[i]['sellers_with_sells'],
                            revenue: data[i]['revenue'],
                            avg_price: data[i]['avg_price'],
                            avg_sale_price: data[i]['avg_sale_price'],
                            comments: data[i]['comments'],
                            rating: data[i]['rating']
                        }
                    }
                    option6['columnDefs'] = [
                        {
                            headerName: 'Дата',
                            field: 'period',
                        },
                        {
                            headerName: 'Товаров',
                            field: 'items',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} шт</p>`
                        },
                        {
                            headerName: 'Товаров с продажами',
                            field: 'items_with_sells',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} шт</p>`
                        },
                        {
                            headerName: 'Продаж',
                            field: 'sales',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} шт</p>`
                        },
                        {
                            headerName: 'Брендов',
                            field: 'brands',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0)}</p>`
                        },
                        {
                            headerName: 'Брендов с продажами',
                            field: 'brands_with_sells',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0)}</p>`
                        },
                        {
                            headerName: 'Продавцов',
                            field: 'sellers',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0)}</p>`
                        },
                        {
                            headerName: 'Продавцов с продажами',
                            field: 'sellers_with_sells',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0)}</p>`
                        },
                        {
                            headerName: 'Выручка',
                            field: 'revenue',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0)} ₽</p>`
                        },
                        {
                            headerName: 'Средняя цена',
                            field: 'avg_price',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} ₽</p>`
                        },
                        {
                            headerName: 'Ср. цена продажи',
                            field: 'avg_sale_price',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} ₽</p>`
                        },
                        {
                            headerName: 'Комментарии',
                            field: 'comments',
                            cellRenderer: params => `<p>${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Рейтинг',
                            field: 'rating',
                            cellRenderer: params => `<p>${(params.value ?? 0).toFixed(2)}</p>`
                        },
                    ]
                    option6['rowData'] = value

                    let grid = new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[5], option6)
                })
        }

        function trends(id) {
            option5 = {...getOptions()}
            fetch(`/api/trends?url={{ path??'-' }}`, {
                method: "GET"
            })
                .then(data => data.json())
                .then(data => {
                    let value = [[], [], [], [], [], [], [], [], [], []], str = ``, values = [],
                        names = [
                            'Продажи', 'Выручка', 'Товаров', 'Товаров с продажами', 'Брендов', 'Брендов с продажами', 'Продавцов', 'Продавцов с продажами', 'Выручка на товар', 'Средний чек'
                        ], labels = []
                    for (let i = 0; i < data.length; i++) {
                        labels[i] = data[i]['week']
                        value[0][i] = data[i]['sales'] ?? 0
                        value[1][i] = data[i]['revenue'] ?? 0
                        value[2][i] = data[i]['items'] ?? 0
                        value[3][i] = data[i]['items_with_sells'] ?? 0
                        value[4][i] = data[i]['brands'] ?? 0
                        value[5][i] = data[i]['brands_with_sells'] ?? 0
                        value[6][i] = data[i]['sellers'] ?? 0
                        value[7][i] = data[i]['sellers_with_sells'] ?? 0
                        value[8][i] = data[i]['product_revenue'] ?? 0
                        value[9][i] = data[i]['average_order_value'] ?? 0

                        values[i] = {
                            week: data[i]['week'] + " - " + data[i]['end_week'],
                            sales: data[i]['sales'] ?? 0,
                            revenue: data[i]['revenue'] ?? 0,
                            items: data[i]['items'] ?? 0,
                            items_with_sells: data[i]['items_with_sells'] ?? 0,
                            brands: data[i]['brands'] ?? 0,
                            brands_with_sells: data[i]['brands_with_sells'] ?? 0,
                            sellers: data[i]['sellers'] ?? 0,
                            sellers_with_sells: data[i]['sellers_with_sells'] ?? 0,
                            product_revenue: data[i]['product_revenue'] ?? 0,
                            average_order_value: data[i]['average_order_value'] ?? 0
                        }
                    }
                    option5['columnDefs'] = [
                        {
                            headerName: 'Неделя',
                            field: 'week',
                        },
                        {
                            headerName: 'Продаж',
                            field: 'sales',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} шт</p>`
                        },
                        {
                            headerName: 'Выручка',
                            field: 'revenue',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} ₽</p>`
                        },
                        {
                            headerName: 'Товаров',
                            field: 'items',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} шт</p>`
                        },
                        {
                            headerName: 'Товаров с продажами',
                            field: 'items_with_sells',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} шт</p>`
                        },
                        {
                            headerName: 'Брендов',
                            field: 'brands',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Брендов с продажами',
                            field: 'brands_with_sells',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Продавцов',
                            field: 'sellers',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Продавцов с продажами',
                            field: 'sellers_with_sells',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Выручка на товар',
                            field: 'product_revenue',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} ₽/шт</p>`
                        },
                        {
                            headerName: 'Средний чек',
                            field: 'average_order_value',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)} ₽</p>`
                        },
                    ]
                    option5['rowData'] = values

                    let grid = new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[4], option5)
                    drawLineGraph('trends_revenue_graph', value, names, labels)
                })
        }

        function sellers(id) {
            option4 = {...getOptions()}
            fetch(`/api/sellers?url={{ path??'-' }}`, {
                method: "GET"
            })
                .then(data => data.json())
                .then(data => {
                    let label = [], valueRev = [], valueSale = [], str = ``, value = []
                    for (let i = 0; i < data.length; i++) {
                        if (i === 6) {
                            label[i] = 'Остальные'
                            valueSale[i] = data[i]['sales']
                            valueRev[i] = data[i]['revenue']
                        }
                        if (i > 6) {
                            valueSale[6] += data[i]['sales']
                            valueRev[6] += data[i]['revenue']
                        }
                        if (i < 6) {
                            label[i] = data[i]['name']
                            valueSale[i] = data[i]['sales']
                            valueRev[i] = data[i]['revenue']
                        }
                        value[i] = {
                            name: data[i]['name'],
                            rating: data[i]['rating'],
                            position: data[i]['position'],
                            comments: data[i]['comments'],
                            sales: data[i]['sales'],
                            balance: data[i]['balance'],
                            revenue: data[i]['revenue'],
                            avg_price: data[i]['avg_price'],
                            items: data[i]['items'],
                            items_with_sells: data[i]['items_with_sells'],
                            items_with_sells_percent: data[i]['items_with_sells_percent'],
                            sales_per_items_average: data[i]['sales_per_items_average'],
                            sales_per_items_with_sells_average: data[i]['sales_per_items_with_sells_average'],
                            brands: data[i]['brands'],
                            brands_with_sells: data[i]['brands_with_sells'],
                            brands_with_sells_percent: data[i]['brands_with_sells_percent'],
                            revenue_per_items_average: data[i]['revenue_per_items_average'],
                            revenue_per_items_with_sells_average: data[i]['revenue_per_items_with_sells_average']
                        }
                    }
                    option4['columnDefs'] = [
                        {
                            headerName: 'Позиция',
                            field: 'position',
                        },
                        {
                            headerName: 'Продавец',
                            field: 'name',
                        },
                        {
                            headerName: 'Рейтинг',
                            field: 'rating',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Комментарии',
                            field: 'comments',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Продажи',
                            field: 'sales',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Продажи (%)',
                            field: 'sales_percent',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Выручка',
                            field: 'items',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Выручка (%)',
                            field: 'revenue_percent',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Средняя цена',
                            field: 'avg_price',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Товаров',
                            field: 'items',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Товаров с продажами',
                            field: 'items_with_sells',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Процент товаров с продажами',
                            field: 'items_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value.toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Среднее число продаж на 1 товар',
                            field: 'sales_per_items_average',
                            cellRenderer: params => `<p class="number">${params.value.toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Среднее число продаж на 1 товар с продажами',
                            field: 'sales_per_items_with_sells_average',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Суммарный остаток',
                            field: 'balance',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Число брендов',
                            field: 'brands',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Брендов с продажами',
                            field: 'brands_with_sells',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Процент брендов с продажами',
                            field: 'brands_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Средняя выручка на 1 товар',
                            field: 'revenue_per_items_average',
                            cellRenderer: params => `<p class="number">${params.value.toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Средняя выручка на 1 товар с продажами',
                            field: 'revenue_per_items_with_sells_average',
                            cellRenderer: params => `<p class="number">${params.value.toFixed(2)}</p>`
                        },

                    ]
                    option4['headerHeight'] = 70
                    option4['rowData'] = value

                    let grid = new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[3], option4)

                    drawDonutGraph('sellers_sales_graph', label, valueSale, 'Продажи')
                    drawDonutGraph('sellers_revenue_graph', label, valueRev, 'Выручка', 'right')
                })
        }

        function brands(id) {
            option3 = {...getOptions()}
            fetch(`/api/brands?url={{ path??'-' }}`, {
                method: "GET"
            })
                .then(data => data.json())
                .then(data => {
                    let label = [], valueRev = [], valueSale = [], str = ``, value = []
                    for (let i = 0; i < data.length; i++) {
                        if (i === 6) {
                            label[i] = 'Остальные'
                            valueSale[i] = data[i]['sales']
                            valueRev[i] = data[i]['revenue']
                        }
                        if (i > 6) {
                            valueSale[6] += data[i]['sales']
                            valueRev[6] += data[i]['revenue']
                        }
                        if (i < 6) {
                            label[i] = data[i]['name']
                            valueSale[i] = data[i]['sales']
                            valueRev[i] = data[i]['revenue']
                        }
                        value[i] = {
                            position: data[i]['position'],
                            brand: data[i]['brand'],
                            rating: data[i]['rating'],
                            comments: data[i]['comments'],
                            sales: data[i]['sales'],
                            sales_percent: data[i]['sales_percent'],
                            items: data[i]['items'],
                            revenue_percent: data[i]['revenue_percent'],
                            avg_price: data[i]['avg_price'],
                            items_with_sells: data[i]['items_with_sells'],
                            items_with_sells_percent: data[i]['items_with_sells_percent'],
                            sales_per_items_average: data[i]['sales_per_items_average'],
                            sales_per_items_with_sells_average: data[i]['sales_per_items_with_sells_average'],
                            sellers: data[i]['sellers'],
                            sellers_with_sells: data[i]['sellers_with_sells'],
                            sellers_with_sells_percent: data[i]['sellers_with_sells_percent'],
                            revenue_per_items_average: data[i]['revenue_per_items_average'],
                            revenue_per_items_with_sells_average: data[i]['revenue_per_items_with_sells_average']
                        }
                    }
                    option3['columnDefs'] = [
                        {
                            headerName: 'Позиция',
                            field: 'position',
                        },
                        {
                            headerName: 'Название',
                            field: 'brand',
                            cellRenderer: params => `<a href="brand/${params.value}">${params.value}</a>`
                        },
                        {
                            headerName: 'Рейтинг',
                            field: 'rating',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Комментарии',
                            field: 'comments',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Продажи',
                            field: 'sales',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Продажи (%)',
                            field: 'sales_percent',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Выручка',
                            field: 'items',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Выручка (%)',
                            field: 'revenue_percent',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Средняя цена',
                            field: 'avg_price',
                            cellRenderer: params => `<p class="number">${(params.value ?? 0).toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Товаров',
                            field: 'items',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Товаров с продажами',
                            field: 'items_with_sells',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Процент товаров с продажами',
                            field: 'items_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value.toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Среднее число продаж на 1 товар',
                            field: 'sales_per_items_average',
                            cellRenderer: params => `<p class="number">${params.value.toFixed(2)}</p>`
                        },
                        {
                            headerName: 'Среднее число продаж на 1 товар с продажами',
                            field: 'sales_per_items_with_sells_average',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Число продавцов',
                            field: 'sellers',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Продавцов с продажами',
                            field: 'sellers_with_sells',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Процент продавцов с продажами',
                            field: 'sellers_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value}</p> `
                        },
                        {
                            headerName: 'Средняя выручка на 1 товар',
                            field: 'revenue_per_items_average',
                            cellRenderer: params => `<p class="number">${params.value.toFixed(2)}</p> `
                        },
                        {
                            headerName: 'Средняя выручка на 1 товар с продажами',
                            field: 'revenue_per_items_with_sells_average',
                            cellRenderer: params => `<p class="number">${params.value.toFixed(2)}</p>`
                        },

                    ]
                    option3['headerHeight'] = 70
                    option3['rowData'] = value

                    let grid = new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[2], option3)

                    drawDonutGraph('brand_sales_graph', label, valueSale, 'Продажи')
                    drawDonutGraph('brand_revenue_graph', label, valueRev, 'Выручка', 'right')
                })
        }

        function subCategory(id) {
            option2 = {...getOptions()}
            fetch(`/api/subCategory?url={{ path??'-' }}`, {method: "GET"})
                .then(data => data.json())
                .then(data => {
                    let label = [], valueSale = [], valueRev = [], value = []
                    for (let i = 0; i < data.length; i++) {
                        if (i === 6) {
                            label[i] = 'Остальные'
                            valueSale[i] = data[i]['sales']
                            valueRev[i] = data[i]['revenue']
                        }
                        if (i > 6) {
                            valueSale[6] += data[i]['sales']
                            valueRev[6] += data[i]['revenue']
                        }
                        if (i < 6) {
                            label[i] = data[i]['name']
                            valueSale[i] = data[i]['sales']
                            valueRev[i] = data[i]['revenue']
                        }
                        value[i] = {
                            name: data[i]['name'],
                            rating: data[i]['rating'].toFixed(0),
                            comments: data[i]['comments'].toFixed(0),
                            sales: data[i]['sales'].toFixed(0),
                            revenue: data[i]['revenue'].toFixed(0),
                            avg_price: data[i]['avg_price'].toFixed(0),
                            items: data[i]['items'].toFixed(0),
                            items_with_sells: data[i]['items_with_sells'].toFixed(0),
                            items_with_sells_percent: data[i]['items_with_sells_percent'].toFixed(0),
                            sales_per_items_average: data[i]['sales_per_items_average'].toFixed(0),
                            sales_per_items_with_sells_average: data[i]['sales_per_items_with_sells_average'].toFixed(0),
                            sellers: data[i]['sellers'].toFixed(0),
                            sellers_with_sells: data[i]['sellers_with_sells'].toFixed(0),
                            sellers_with_sells_percent: data[i]['sellers_with_sells_percent'].toFixed(0),
                            brands: data[i]['brands'].toFixed(0),
                            brands_with_sells: data[i]['brands_with_sells'],
                            brands_with_sells_percent: data[i]['brands_with_sells_percent'].toFixed(0),
                            revenue_per_items_average: data[i]['revenue_per_items_average'].toFixed(0),
                            revenue_per_items_with_sells_average: data[i]['revenue_per_items_with_sells_average'].toFixed(0)
                        }
                    }
                    option2['columnDefs'] = [
                        {
                            headerName: 'Рубрика', field: 'name', cellRenderer: params => {
                                let url = params.value === 'Текущая категория' ? '' : `category?url={{ path??'-' }}/${params.value}`
                                return `<a style="height: 32px; width: 32px" href="${url}" >${params.value}</a>`
                            }
                        },
                        {
                            headerName: 'Рейтинг',
                            field: 'rating',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Комментарии',
                            field: 'comments',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Продажи',
                            field: 'sales',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Выручка',
                            field: 'revenue',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Средняя цена',
                            field: 'avg_price',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Товаров',
                            field: 'items',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Товаров c продажами',
                            field: 'items_with_sells',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Процент товаров c продажами',
                            field: 'items_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Среднее число продаж на 1 товар',
                            field: 'sales_per_items_average',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Среднее число продаж на 1 товар с продажами',
                            field: 'sales_per_items_with_sells_average',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Число продавцов',
                            field: 'sellers',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Продавцов с продажами',
                            field: 'sellers_with_sells',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Процент продавцов с продажами',
                            field: 'sellers_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Число брендов',
                            field: 'brands',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Брендов с продажами',
                            field: 'brands_with_sells',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Процент брендов с продажами',
                            field: 'brands_with_sells_percent',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Средняя выручка на 1 товар',
                            field: 'revenue_per_items_average',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                        {
                            headerName: 'Средняя выручка на 1 товар с продажами',
                            field: 'revenue_per_items_with_sells_average',
                            cellRenderer: params => `<p class="number">${params.value}</p>`
                        },
                    ]
                    option2['headerHeight'] = 70
                    option2['rowData'] = value

                    let grid = new agGrid.Grid(document.getElementsByClassName("ag-theme-balham")[1], option2)

                    drawDonutGraph('sales_graph', label, valueSale, 'Продажи')
                    drawDonutGraph('revenue_graph', label, valueRev, 'Выручка', 'right')
                })
        }
    </script>
{% endblock %}